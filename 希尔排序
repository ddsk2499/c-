//希尔排序（是插入排序的一种，交换不相邻的元素对数组的局部进行排序，并最终用插入排序将局部有序的数组排序）
//2021.3.24
#include <stdio.h>//头文件
int shsort(int s[], int n)//自定义函数 shsort()
{
	int i, j, d;//定义变量及固定增量值
	d = n / 2;    //确定固定增量值
	while (d >= 1)
	{
		for (i = d + 1; i <= n; i++)    //数组下标从d+1开始进行直接插入排序
		{
			s[0] = s[i];    //将s[i]的值储存在s[0]中
			j = i - d;    //确定要进行比较的元素的最右边位置
			while ((j > 0) && (s[0] < s[j]))
			{
				s[j + d] = s[j];   //数据右移
				j = j - d;    //向左移d个位置
			}
			s[j + d] = s[0];   //在确定的位罝插入s[i]
		}
		d = d / 2;    //增量变为原来的一半
	}//排序完成
	return 0;
}
int main()
{
	int a[10], i;   //定义数组及变量
	printf("请输入 10 个数据：\n");
	for (i = 1; i <= 10; i++)
		scanf_s("%d", &a[i]);   //得到10个数据
	shsort(a, 10);    // 调用 shsort()函数
	printf("排序后的顺序是：\n");
	for (i = 1; i <= 10; i++)
		printf("%5d", a[i]);    //输出排序后的数组(按5位的固定位宽输出整型数值。不足5位,则在前面补空格;超过5位,则按实际位数输出)
	printf("\n");
	return 0;
}
